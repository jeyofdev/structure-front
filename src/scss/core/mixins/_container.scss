// container
//
/// set the css properties of the container
///
/// @param $className {string} name of the generated class (container or container-fluid)
/// @param $paddingContainer total value of padding left and right
@mixin make-container($className: "container", $paddingContainer: $grid-gutter-width) {
  .#{$className} {
    width: calc(100% - #{$paddingContainer});
    padding-right: $paddingContainer / 2;
    padding-left: $paddingContainer / 2;
    margin: 0 auto;

    @if $className == "container" {
      @include make-max-widths();
    }
  }
}

/// set the maximum width of the container in a media query for each breakpoint
///
/// @param $max-widths {map} list of container widths
/// @param $breakpoints {map} list of the breakpoints
@mixin make-max-widths($max-widths: $container-widths, $breakpoints: $grid-breakpoints) {
  @each $key, $value in $max-widths {
    @include media-queries-up($key, $breakpoints) {
      max-width: $value;
    }
  }
}

/// set the css properties of the classes row 
///
/// @param $className {string} name of the generated class
/// @param $paddingRow total value of padding left and right
@mixin make-row ($className: "row", $paddingRow: $grid-gutter-width) {
  .#{$className} {
    display: flex;
    flex-wrap: wrap;
  }
}

/// set the padding to 0
///
/// @param $className {string} name of the generated class
@mixin reset-padding ($className: "no-padding-h") {
  .#{$className} {
    margin-right: 0;
    margin-left: 0;
  }
}
